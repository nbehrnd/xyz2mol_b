# name:   xyz2mol_b_source.org
# date:   <2023-08-09 Wed>
# edit:
# Export the tangled files with C-c C-v t

#+OPTIONS: toc:nil ^:nil

* todo
  :PROPERTIES:
  :ID:       3f46742f-d595-4ccb-b7f2-04772a33bab9
  :END:

** dependencies
   :PROPERTIES:
   :ID:       f816f069-0146-4626-a9bd-716289716f3b
   :END:

   #+begin_src shell :results nil :tangle requirements.txt
rdkit>=2023.03.2
   #+end_src

** Python script
   :PROPERTIES:
   :ID:       35b8bcb9-9b1f-43ae-9bc2-643d00f33125
   :END:
   
   #+begin_src python :results nil :tangle xyz2mol_b.py
#!/usr/bin/env python3
"""
name   : xyz2mol_b.py
author : nbehrnd@yahoo.com
license: GPL2
date   : <2023-08-08 Tue>
edit   :
purpose: a modernized xyz2mol interface to RDKit 2023.03.2, or greater
"""

import argparse

import rdkit
from rdkit import Chem
from rdkit.Chem import rdDetermineBonds


def get_args():
    """get arguments from the CLI"""

    parser = argparse.ArgumentParser(
        description=
        "convert a xyz geometry into a .sdf file with RDKit 2023.03.2, or greater",
        formatter_class=argparse.ArgumentDefaultsHelpFormatter)

    parser.add_argument("file",
                        help=".xyz input file to process",
                        metavar="FILE",
                        type=argparse.FileType("rt"),
                        default=None)

    parser.add_argument("-c",
                        "--charge",
                        help="charge globally attributed to the structure",
                        metavar="int",
                        type=int,
                        default=0)

    return parser.parse_args()


def main():
    """join the functionalities"""

    args = get_args()

    raw_mol = Chem.MolFromXYZFile(args.file.name)
    mol = Chem.Mol(raw_mol)

    try:
        rdkit.Chem.rdDetermineBonds.DetermineBonds(mol, charge=args.charge)
        print(Chem.MolToMolBlock(mol))
    except ValueError:
        print(
            "The attributed global charge by `-c` is incompatible with bond orders assigned."
        )


if __name__ == "__main__":
    main()
   #+end_src
** brief documentation
   :PROPERTIES:
   :ID:       fbc52836-2bd1-43e3-a24b-ac48bca8b558
   :END:

   #+begin_src org :tangle README.org
,#+OPTIONS: toc:nil ^:nil
,* intent

  Given an input structure as .xyz file, the moderator script ~xyz2mol_b.py~
  provides a representation in the .sdf format.  The user is expected to
  describe the overall charge by flag ~-c~ (or ~--charge~) if the molecule is
  not neutral.  Based on Jan Jensen's work on ~xyz2mol~[fn:1], it depends on a
  recent release of RDKit (e.g., 2023.03.2).  It is suggested to resolve the
  dependencies in an activated virtual environment for Python and a call of

  ,#+begin_src shell :results nil :tangle no
pip -r install requirements.txt
  ,#+end_src

  and eventually use the script in a pattern like

  ,#+begin_src shell :results nil :tangle no
python ./xyz2mol_b.py ./acetate.xyz --charge -1
  ,#+end_src
  
,* background

  Jan Jensen's xyz2mol[fn:1] entered RDKit.[fn:2] This allows a shorter
  (moderator) script to convert xyz into .sdf provided one actually has access
  to a version of RDKit modern enough: contrasting to Greg Landrum's blog,[fn:3]
  RDKit 2022.09.3 as so far packaged for Linux Debian does not yet include this
  functionality -- according to repology.org,[fn:4] this equally applies to
  relatives via DebiChem (e.g. Ubuntu ecosystem).  As checked, creating a
  virtual environment for Python and a pip based installation of RDKit 2023.03.2
  (and its dependencies such as numpy) offers one successful bypass.  An
  alternative environment not tested may be anaconda.

  The script was written in an instance of Linux Debian 13/trixie (branch
  testing) with Python (version 3.11.4) and pip installed RDKit (2202.09.3).  As
  inspected with openbabel and Jmol, Jan Jensen's four test structures pass the
  conversion.

  |                        |    <r> |
  | file name              | charge |
  |------------------------+--------|
  | acetate.xyz            |     -1 |
  | ethane.xyz             |      0 |
  | propylbenzene.xyz      |      1 |
  | stereogenic_center.xyz |      0 |

[fn:1] https://github.com/jensengroup/xyz2mol
[fn:2] https://github.com/jensengroup/xyz2mol/issues/40
[fn:3] https://greglandrum.github.io/rdkit-blog/posts/2022-12-18-introducing-rdDetermineBonds.html
[fn:4] https://repology.org/project/rdkit/packages
   #+end_src
